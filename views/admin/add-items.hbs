<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>add item</title>
  <style>
    body {
      height: 100vh;
      background: #f5f5f5;
    }

    .container {
      height: 450px;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }




    /* Button Styling */
    #addItemBtn {
      display: block;
      margin: 0 auto 20px auto;
      font-size: 1rem;
      padding: 10px 30px;
      background-color: #007bff;
      border: none;
      color: white;
      border-radius: 10px;
      transition: background-color 0.3s ease;
    }

    #addItemBtn:hover {
      background-color: #0056b3;
    }

    .itemContainer {
      width: 500px;
    }

    /* Item Container Grid Layout */
    #itemContainer {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      justify-content: center;
    }

    /* Styling for Dynamically Added Items */
    #itemContainer .card {
      width: 280px;
      border: 1px solid #ddd;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      background-color: white;
      ;
    }


    #itemContainer .card img {
      width: 100%;
      height: 200px;
      object-fit: cover;
    }

    #itemContainer .card .card-body {
      padding: 15px;
      text-align: center;
    }

    #itemContainer .card .card-title {
      font-size: 1.25rem;
      color: #333;
      margin-bottom: 10px;
    }

    #itemContainer .card .card-text {
      font-size: 0.875rem;
      color: #666;
      margin-bottom: 15px;
    }

    #itemContainer .card .btn {
      font-size: 0.875rem;
      padding: 8px 15px;
      margin: 0 5px;
      border-radius: 4px;
      transition: background-color 0.3s ease;
    }

    #itemContainer .card .btn-secondary {
      background-color: #6c757d;
      color: white;
    }

    #itemContainer .card .btn-secondary:hover {
      background-color: #5a6268;
    }

    #itemContainer .card .btn-danger {
      background-color: #dc3545;
      color: white;
    }

    #itemContainer .card .btn-danger:hover {
      background-color: #c82333;
    }
  </style>
</head>

<body>

  <div class="container">
    <button id="addItemBtn" class="btn">Add Item</button>
    <div id="itemContainer" class="row mt-4">
      <!-- Dynamically added items will appear here -->
    </div>
  </div>

  <script>
    let itemCount = 0; // Counter for unique ID generation

    document.getElementById('addItemBtn').addEventListener('click', function () {
      const itemContainer = document.getElementById('itemContainer');
      itemCount++;

      // Create a new item card
      const itemCard = document.createElement('div');
      itemCard.className = 'col-sm-4 mb-3';
      itemCard.innerHTML = `
      <div class="card">
        <div class="card-body">
          <input type="text" class="form-control mb-2" placeholder="Enter Item Name" id="itemName_${itemCount}">
          
          <!-- Category Selection -->
          <select class="form-control mb-2" id="itemCategory_${itemCount}">
            <option value="">Select Category</option>
            <option value="subjunior">Sub Junior</option>
            <option value="junior">Junior</option>
            <option value="senior">Senior</option>
            <option value="general(individual)">General (Individual)</option>
            <option value="general(group)">General (Group)</option>
          </select>

          <!-- C, A, B Selection -->
          <select class="form-control mb-2" id="itemType_${itemCount}">
            <option value="">Select Type</option>
            <option value="C">C</option>
            <option value="A">A</option>
            <option value="B">B</option>
          </select>

          <!-- Stage Selection -->
          <select class="form-control mb-2" id="itemStage_${itemCount}">
            <option value="">Select Stage Type</option>
            <option value="stage">Stage</option>
            <option value="offstage">Off Stage</option>
          </select>

          <button class="btn btn-success" onclick="saveItem(${itemCount})">Save</button>
        </div>
      </div>
    `;

      itemContainer.appendChild(itemCard);
    });

    // Function to save the item when the Save button is clicked
    function saveItem(id) {
      const itemName = document.getElementById(`itemName_${id}`).value;
      const itemCategory = document.getElementById(`itemCategory_${id}`).value;
      const itemType = document.getElementById(`itemType_${id}`).value;
      const itemStage = document.getElementById(`itemStage_${id}`).value;

      if (itemName && itemCategory && itemType && itemStage) {
        // Send data to server using Fetch
        fetch('/admin/items/add', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name: itemName, category: itemCategory, type: itemType, stage: itemStage })
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              alert('Item added successfully!');
              location.reload(); // Reload the page to show the updated items
            } else {
              alert('Error adding item');
            }
          });
      } else {
        alert('Please enter an item name, select a category, a type, and a stage.');
      }
    }
  </script>

</body>

</html>